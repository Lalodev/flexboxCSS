*,
*::after,
*::before {
    box-sizing: border-box;
}

.container {
    background-color: #333;      
    /*height: 30vh;*/
    height: 400px;        
    width: 100%;

    /*Propiedades para el padre*/
    display: flex;  
    /*Define que una caja será flexbox de bloque o felxbox de línea*/
    /*inline-flex*/
    flex-direction: row; 
    /*row | row-reverse | column | column-reverse*/
    /*Define el eje principal (main-axis) row -x, column - y*/
    flex-wrap: nowrap; 
    /*nowrap | wrap | wrap-reverse*/
    /*Define sí la caja flexbox envuelve o NO a sus hijos*/
    flex-flow: row nowrap; 
    /*shortcut*/
    justify-content: flex-start; 
    /*flex-start | center | flex-end | space-between | space-around | space-evenly*/
    /*Define la alineación de los elementos hijos, respecto del eje pricipal (main-axis)*/
    align-items: stretch; 
    /*stretch | flex-start | flex-end | center | baseline*/
    align-content: flex-start; 
    /*flex-start | flex-ended | center | space-between | space-around | space-evenly | stretch*/
    /* Define la alineación de los hijos en el eje transversal (cross axis), NO funciona cuando los hijos están en UNA sóla línea (Cuando flex-wrap: nowrap -> NO funciona)*/
}

.item {
    border: medium solid #999;
    /*width: 20%;*/
    /*height: 20%;*/
    /*width: 100px;*/
    background-color: #666;        
    
    /*Propiedades para los hijos*/
    flex-grow: 0;
    /*Cuando la caja flexbox tenga espacio sobrante, es la habilidad o el factor de crecer, valor por defecto es 0, NO se aceptan nagativos*/
    flex-shrink: 1;
    /*Cuando la caja flexbox NO tenga espacio sobrante, es la habilidad o el factor de encogerse, valor por defecto es 1, NO se aceptan valores nagativos*/
    flex-basis: auto;
    /*flex-basis: 100px;*/
    /*width: 200px; *//*Sí existe flex-basis, este width no se toma en cuenta, ya que tiene prioridad el flex-basis*/
    /*height: 50px;*/
    /*Es el tamaño del elemento hijo dentro de la linea de la caja flexbox.
    Sí la caja flexbox tiene dirección de fila, flex-basis representa el width.
    Sí la caja flexbox tiene dirección de columna, flex-basis representa el height.
    Valor por defecto auto*/ 
    flex: 0 1 auto;
    /*shortcut -> flex-grow flex-shrink flex-basis*/
    order: 0;
    /*Representa el orden que tendrán los elementos hijos en la caja flexbox
    Valor por defecto 0
    Se aceptan valores positivos y nagtivos
    Un valor menor siempre irá antes que un valor mayor*/
     align-self: stretch;
     /*Sobreescibe el valor de la propiedad align-items sólo para el elemento hijo especificado*/
     /*stretch | flex-start | flex-end | center | baseline*/

}

.item:nth-child(2) {
    /*flex-grow: 3;*/
    /*flex-shrink: 2;*/
    order: -1;
   
}

.item:nth-child(3) {
    /*flex-grow: 2;*/
    align-self: center;
}

/*.item:nth-child(2),
.item:nth-child(17) {
    font-size: 250%;
}*/